## Intro

In his 1992 cyberpunk novel _Snow Crash_, Neal Stephenson envisioned much of what would become of today's Internet. A globally accessible network of information, with up-to-the-second data. 

The Metaverse, was a digital representation of our physical universe. By strapping on our 3D goggles, we could let ourselves be enveloped by the virtual reality. While much of this vision has come to pass, the digital realm of the Internet still remains a two-dimensional universe


## Intro


For those of us who grew up in the golden age of the Super Nintendo, I can't imagine anyone who was not astounded by Star Fox. Unlike the previous two decades of 

There is something incredibly engaging with 

I immediately wanted to experience the 

## Intro

Ladies in gentlemen, it is the second decade of the second millenium and we are still kicking around the same 2D interface we got two decades ago in the original Mac. Sure, Apple debuted some 10.7 apps that added a couple more 3D flourishes, and Microsoft has had that [Flip 3D](http://windows.microsoft.com/en-US/windows-vista/Using-Windows-Flip-3D) for a while. But c'mon, 2011 is in a couple weeks. We should be zipping around the Metaverse in super-sonic motorbikes , as Hiro Protagonist did in Neal Stephenson's _Snow Crash._ 

## Intro

While the capability of rendering complex 3D environments has been present for years, the digital interfaces of today predominately exist in a two dimensional environment. Largely this is due to the constraints of the physical interfaces themselves. The monitor has width and height. The mouse moves left, right, up, down. Digital interfaces are ill equipped to interact with in three dimensions. So for us web designers, we ought to wonder why bother at all learning and developing interfaces that take advantage of 3D space? If after decades of development, the biggest and best native software developers cannot make good use of this feature, what chance do we have?





## Rationale

Before we dive into the technical aspects of CSS 3D transforms, we ought to judge 

Before we answer how to use CSS 3D Transforms, we ought to answer why we should use them in the first place. For years, application In general terms, CSS is a language designed to style documents.

While 3D transforms might be sexy and cool, we owe it to our users to ask what can they benefit from them?

I advocate that appropriate use of 3D transforms can be beneficial to interfaces. Take for instance the Weather App on the iPhone. The application uses two views, a details view of the weather, and a editable view of options for selecting locations. Switching between these two views is done with a 3D flip transition. This affords the user that interface has but two views, and only two views, as the exist on two sides of the same plane.

Also consider image cycle interfaces. What cues tip-off the user that the advancing from the last slide will re-start the cycle at the first? A better paradigm can be used with a 3D transform, where the slides are places side by side one another _in a circle in the third dimension_. In that arrangement, the last slide logically does come before the first.




## Current Environment

At the moment of writing this article, 3D transforms are only supported by Safari on the desktop, and Mobile Safari on iOS devices. To make matters more complexing, Chrome currently accepts 3D transform declarations, but renders them in 2D space.

